
;; Function hookReplacementFunction (hookReplacementFunction, funcdef_no=5, decl_uid=3847, cgraph_uid=5, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = -2
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 4, n_alt = 0
   Insn 5: point = 4, n_alt = 4
 r87: [2..3]
 r88: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r87: [2..3]
 r88: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 10
changing reg in insn 10
changing reg in insn 14
deleting insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns


hookReplacementFunction

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={4d,3u} r1={2d} r2={2d} r4={2d} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 103{93d,10u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f8276b446c0 *.LC0>)) "/home/kam/CLionProjects/untitled1/test.c":13 81 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8276d43600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "/home/kam/CLionProjects/untitled1/test.c":13 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 14 2 (set (reg:SI 0 ax [orig:87 _3 ] [87])
        (const_int 3 [0x3])) "/home/kam/CLionProjects/untitled1/test.c":14 82 {*movsi_internal}
     (nil))
(insn 14 7 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:88 <retval> ] [88])) "/home/kam/CLionProjects/untitled1/test.c":15 82 {*movsi_internal}
     (nil))
(insn 15 14 17 2 (use (reg/i:SI 0 ax)) "/home/kam/CLionProjects/untitled1/test.c":15 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 17 15 0 NOTE_INSN_DELETED)

;; Function ctor (ctor, funcdef_no=6, decl_uid=3850, cgraph_uid=6, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=80, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 20:  (0) =rm  (1) 0  (2) re {*subdi_1}
      Creating newreg=115 from oldreg=87, assigning class GENERAL_REGS to r115
   20: {r115:DI=r115:DI-r88:DI;clobber flags:CC;}
      REG_DEAD r88:DI
      REG_DEAD r87:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   61: r115:DI=r87:DI
    Inserting insn reload after:
   62: r89:DI=r115:DI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =rm  (1) 0 {*negdi2_1}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            alt=3: Bad operand -- refuse
	 Choosing alt 2 in insn 40:  (0) r  (1) 0  (2) rm {*anddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 43:  (0) r  (1) 0  (2) rm {*subdi_1}
      Creating newreg=116 from oldreg=110, assigning class GENERAL_REGS to r116
   43: {r116:DI=r116:DI-[frame:DI-0x10];clobber flags:CC;}
      REG_DEAD r110:DI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:DI-0x18]-[frame:DI-0x10]
    Inserting insn reload before:
   63: r116:DI=r110:DI
    Inserting insn reload after:
   64: r94:DI=r116:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =r  (1) %0  (2) rme {*iorsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 55:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 59: point = 0, n_alt = -1
   Insn 56: point = 0, n_alt = 5
   Insn 55: point = 1, n_alt = 3
   Insn 54: point = 2, n_alt = 3
   Insn 53: point = 3, n_alt = 5
   Insn 52: point = 4, n_alt = 0
   Insn 51: point = 6, n_alt = 0
   Insn 50: point = 8, n_alt = 0
   Insn 49: point = 10, n_alt = 0
   Insn 48: point = 11, n_alt = 0
   Insn 47: point = 11, n_alt = -2
   Insn 46: point = 12, n_alt = -2
   Insn 45: point = 13, n_alt = 0
   Insn 44: point = 13, n_alt = 3
   Insn 64: point = 14, n_alt = -2
	Hard reg 2 is preferable by r116 with profit 1
   Insn 43: point = 16, n_alt = 1
   Insn 63: point = 16, n_alt = -2
	Hard reg 2 is preferable by r116 with profit 1
	Hard reg 0 is preferable by r116 with profit 1
   Insn 42: point = 18, n_alt = 3
   Insn 41: point = 19, n_alt = 5
   Insn 40: point = 20, n_alt = 2
   Insn 37: point = 22, n_alt = 0
   Insn 36: point = 24, n_alt = 3
   Insn 35: point = 25, n_alt = 5
   Insn 34: point = 26, n_alt = 0
   Insn 33: point = 28, n_alt = 3
   Insn 29: point = 29, n_alt = 5
   Insn 28: point = 30, n_alt = 3
   Insn 27: point = 31, n_alt = 5
   Insn 26: point = 32, n_alt = -2
   Insn 25: point = 33, n_alt = 0
   Insn 24: point = 33, n_alt = 0
   Insn 23: point = 33, n_alt = 1
   Insn 22: point = 34, n_alt = 0
   Insn 21: point = 36, n_alt = 0
   Insn 62: point = 38, n_alt = -2
	Hard reg 0 is preferable by r115 with profit 1
   Insn 20: point = 40, n_alt = 0
   Insn 61: point = 41, n_alt = -2
	Hard reg 0 is preferable by r115 with profit 1
	Hard reg 1 is preferable by r115 with profit 1
   Insn 19: point = 43, n_alt = 3
   Insn 18: point = 44, n_alt = 3
   Insn 17: point = 45, n_alt = 5
   Insn 16: point = 46, n_alt = 4
   Insn 15: point = 47, n_alt = 5
   Insn 14: point = 48, n_alt = -2
   Insn 13: point = 49, n_alt = 0
   Insn 12: point = 49, n_alt = -2
   Insn 11: point = 50, n_alt = 4
   Insn 10: point = 50, n_alt = 3
   Insn 9: point = 51, n_alt = 5
   Insn 8: point = 52, n_alt = -2
   Insn 7: point = 53, n_alt = 0
   Insn 6: point = 53, n_alt = 2
   Insn 5: point = 53, n_alt = 0
 r87: [42..44]
 r88: [40..43]
 r89: [37..38]
 r90: [35..36]
 r91: [33..34]
 r92: [31..32]
 r93: [21..22]
 r94: [12..14]
 r95: [11..13]
 r96: [7..8]
 r97: [5..6]
 r98: [51..52]
 r99: [49..50]
 r100: [47..48]
 r101: [45..46]
 r102: [29..30]
 r105: [25..26]
 r106: [27..28]
 r107: [23..24]
 r109: [19..20]
 r110: [17..18]
 r111: [9..10]
 r112: [3..4]
 r113: [0..2]
 r114: [0..1]
 r115: [39..41]
 r116: [15..16]
Compressing live ranges: from 53 to 48 - 90%
Ranges after the compression:
 r87: [38..39]
 r88: [36..39]
 r89: [34..35]
 r90: [32..33]
 r91: [30..31]
 r92: [28..29]
 r93: [18..19]
 r94: [10..11]
 r95: [10..11]
 r96: [6..7]
 r97: [4..5]
 r98: [46..47]
 r99: [44..45]
 r100: [42..43]
 r101: [40..41]
 r102: [26..27]
 r105: [22..23]
 r106: [24..25]
 r107: [20..21]
 r109: [16..17]
 r110: [14..15]
 r111: [8..9]
 r112: [2..3]
 r113: [0..1]
 r114: [0..1]
 r115: [36..37]
 r116: [12..13]

********** Assignment #1: **********

	 Assigning to 115 (cl=GENERAL_REGS, orig=87, freq=3, tfirst=115, tfreq=3)...
	   Assign 1 to reload r115 (freq=3)
	 Assigning to 116 (cl=GENERAL_REGS, orig=110, freq=3, tfirst=116, tfreq=3)...
	   Assign 0 to reload r116 (freq=3)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=80, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 27
changing reg in insn 37
changing reg in insn 40
changing reg in insn 46
changing reg in insn 44
changing reg in insn 47
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 35
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 49
changing reg in insn 50
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 55
changing reg in insn 56
deleting insn with uid = 8.
deleting insn with uid = 14.
deleting insn with uid = 61.
deleting insn with uid = 26.
deleting insn with uid = 63.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 48.


ctor

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={25d,23u} r1={9d,4u} r2={6d,1u} r4={8d,3u} r5={9d,4u} r6={1d,24u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={12d} r18={4d} r19={4d} r20={1d,1u,5e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 417{346d,66u,5e} in 47{43 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 105 106 107 109 110 111 112 113 114
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 2 [0x2])) "/home/kam/CLionProjects/untitled1/test.c":20 82 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (const_int 0 [0])) "/home/kam/CLionProjects/untitled1/test.c":20 81 {*movdi_internal}
     (nil))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dlopen") [flags 0x41]  <function_decl 0x7f8276e49d00 dlopen>) [0 dlopen S1 A8])
            (const_int 0 [0]))) "/home/kam/CLionProjects/untitled1/test.c":20 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [3 mainProgramHandle+0 S8 A64])
        (reg:DI 0 ax [98])) "/home/kam/CLionProjects/untitled1/test.c":20 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [3 mainProgramHandle+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":21 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f8276b44ab0 *.LC1>)) "/home/kam/CLionProjects/untitled1/test.c":21 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [99])) "/home/kam/CLionProjects/untitled1/test.c":21 81 {*movdi_internal}
     (nil))
(call_insn 13 12 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dlsym") [flags 0x41]  <function_decl 0x7f8276e49f00 dlsym>) [0 dlsym S1 A8])
            (const_int 0 [0]))) "/home/kam/CLionProjects/untitled1/test.c":21 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 13 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 origFunc+0 S8 A64])
        (reg:DI 0 ax [100])) "/home/kam/CLionProjects/untitled1/test.c":21 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [101])
        (symbol_ref:DI ("hookReplacementFunction") [flags 0x3]  <function_decl 0x7f8276b3bc00 hookReplacementFunction>)) "/home/kam/CLionProjects/untitled1/test.c":22 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 newFunc+0 S8 A64])
        (reg/f:DI 0 ax [101])) "/home/kam/CLionProjects/untitled1/test.c":22 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx [orig:87 newFunc.0_1 ] [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 newFunc+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":23 81 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 0 ax [orig:88 origFunc.1_2 ] [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 origFunc+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":23 81 {*movdi_internal}
     (nil))
(insn 20 19 62 2 (parallel [
            (set (reg:DI 1 dx [orig:87 newFunc.0_1 ] [87])
                (minus:DI (reg:DI 1 dx [orig:87 newFunc.0_1 ] [87])
                    (reg:DI 0 ax [orig:88 origFunc.1_2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "/home/kam/CLionProjects/untitled1/test.c":23 274 {*subdi_1}
     (nil))
(insn 62 20 21 2 (set (reg:DI 0 ax [orig:89 _3 ] [89])
        (reg:DI 1 dx [orig:87 newFunc.0_1 ] [87])) "/home/kam/CLionProjects/untitled1/test.c":23 81 {*movdi_internal}
     (nil))
(insn 21 62 22 2 (set (reg:SI 0 ax [orig:90 _4 ] [90])
        (reg:SI 0 ax [orig:89 _3 ] [89])) "/home/kam/CLionProjects/untitled1/test.c":23 82 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 0 ax [orig:91 _5 ] [91])
                (plus:SI (reg:SI 0 ax [orig:90 _4 ] [90])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) "/home/kam/CLionProjects/untitled1/test.c":23 217 {*addsi_1}
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [4 offset+0 S4 A32])
        (reg:SI 0 ax [orig:91 _5 ] [91])) "/home/kam/CLionProjects/untitled1/test.c":23 82 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SI 5 di)
        (const_int 30 [0x1e])) "/home/kam/CLionProjects/untitled1/test.c":25 82 {*movsi_internal}
     (nil))
(call_insn 25 24 27 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sysconf") [flags 0x41]  <function_decl 0x7f8276e7ce00 sysconf>) [0 sysconf S1 A8])
            (const_int 0 [0]))) "/home/kam/CLionProjects/untitled1/test.c":25 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 27 25 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 pageSize+0 S8 A64])
        (reg:DI 0 ax [orig:92 _6 ] [92])) "/home/kam/CLionProjects/untitled1/test.c":25 81 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg/f:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 origFunc+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":26 81 {*movdi_internal}
     (nil))
(insn 29 28 33 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 start+0 S8 A64])
        (reg/f:DI 0 ax [102])) "/home/kam/CLionProjects/untitled1/test.c":26 81 {*movdi_internal}
     (nil))
(insn 33 29 34 2 (set (reg:DI 0 ax [106])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 start+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":27 81 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:DI 0 ax [105])
                (plus:DI (reg:DI 0 ax [106])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/home/kam/CLionProjects/untitled1/test.c":27 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [1 start+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 35 34 36 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 end+0 S8 A64])
        (reg:DI 0 ax [105])) "/home/kam/CLionProjects/untitled1/test.c":27 81 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 0 ax [107])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 pageSize+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":28 81 {*movdi_internal}
     (nil))
(insn 37 36 40 2 (parallel [
            (set (reg:DI 0 ax [orig:93 _7 ] [93])
                (neg:DI (reg:DI 0 ax [107])))
            (clobber (reg:CC 17 flags))
        ]) "/home/kam/CLionProjects/untitled1/test.c":28 469 {*negdi2_1}
     (expr_list:REG_EQUAL (neg:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [1 pageSize+0 S8 A64]))
        (nil)))
(insn 40 37 41 2 (parallel [
            (set (reg:DI 0 ax [109])
                (and:DI (reg:DI 0 ax [orig:93 _7 ] [93])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [1 start+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/home/kam/CLionProjects/untitled1/test.c":28 398 {*anddi_1}
     (nil))
(insn 41 40 42 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 pageStart+0 S8 A64])
        (reg:DI 0 ax [109])) "/home/kam/CLionProjects/untitled1/test.c":28 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 0 ax [110])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 end+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":29 81 {*movdi_internal}
     (nil))
(insn 43 42 64 2 (parallel [
            (set (reg:DI 0 ax [110])
                (minus:DI (reg:DI 0 ax [110])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [1 pageStart+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "/home/kam/CLionProjects/untitled1/test.c":29 274 {*subdi_1}
     (expr_list:REG_EQUAL (minus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 end+0 S8 A64])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 pageStart+0 S8 A64]))
        (nil)))
(insn 64 43 44 2 (set (reg:DI 2 cx [orig:94 _8 ] [94])
        (reg:DI 0 ax [110])) "/home/kam/CLionProjects/untitled1/test.c":29 81 {*movdi_internal}
     (nil))
(insn 44 64 45 2 (set (reg/f:DI 0 ax [orig:95 pageStart.2_9 ] [95])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 pageStart+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":29 81 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "/home/kam/CLionProjects/untitled1/test.c":29 82 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [orig:94 _8 ] [94])) "/home/kam/CLionProjects/untitled1/test.c":29 81 {*movdi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:95 pageStart.2_9 ] [95])) "/home/kam/CLionProjects/untitled1/test.c":29 81 {*movdi_internal}
     (nil))
(call_insn 48 47 49 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mprotect") [flags 0x41]  <function_decl 0x7f8276e67500 mprotect>) [0 mprotect S1 A8])
            (const_int 0 [0]))) "/home/kam/CLionProjects/untitled1/test.c":29 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 49 48 50 2 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [4 offset+0 S4 A32])) "/home/kam/CLionProjects/untitled1/test.c":31 82 {*movsi_internal}
     (nil))
(insn 50 49 51 2 (parallel [
            (set (reg:SI 0 ax [orig:96 _10 ] [96])
                (ashift:SI (reg:SI 0 ax [111])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/home/kam/CLionProjects/untitled1/test.c":31 521 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [4 offset+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 51 50 52 2 (parallel [
            (set (reg:SI 0 ax [orig:97 _11 ] [97])
                (ior:SI (reg:SI 0 ax [orig:96 _10 ] [96])
                    (const_int 233 [0xe9])))
            (clobber (reg:CC 17 flags))
        ]) "/home/kam/CLionProjects/untitled1/test.c":31 425 {*iorsi_1}
     (nil))
(insn 52 51 53 2 (set (reg:DI 0 ax [112])
        (sign_extend:DI (reg:SI 0 ax [orig:97 _11 ] [97]))) "/home/kam/CLionProjects/untitled1/test.c":31 145 {*extendsidi2_rex64}
     (nil))
(insn 53 52 54 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 instruction+0 S8 A64])
        (reg:DI 0 ax [112])) "/home/kam/CLionProjects/untitled1/test.c":31 81 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg/f:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 origFunc+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":32 81 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:DI 1 dx [114])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 instruction+0 S8 A64])) "/home/kam/CLionProjects/untitled1/test.c":32 81 {*movdi_internal}
     (nil))
(insn 56 55 59 2 (set (mem:DI (reg/f:DI 0 ax [113]) [1 *origFunc_16+0 S8 A64])
        (reg:DI 1 dx [114])) "/home/kam/CLionProjects/untitled1/test.c":32 81 {*movdi_internal}
     (nil))
(insn 59 56 60 2 (const_int 0 [0]) "/home/kam/CLionProjects/untitled1/test.c":33 694 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 60 59 0 NOTE_INSN_DELETED)
